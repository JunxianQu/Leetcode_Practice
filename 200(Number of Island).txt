class Solution {
    public int numIslands(char[][] grid) {
        int[][] flag = new int [grid.length][grid[0].length];
        int result = 0;
        for(int i = 0; i < grid.length; i++) {
            for(int j = 0; j < grid[0].length; j++) {
                if( flag[i][j] == 0) {
                    result += searchIsland(grid, flag, i, j);
                }
            }
        }
        return result;
        
    }
    public int searchIsland(char[][] grid, int[][] flag, int i, int j) {
        if(grid[i][j] == '0' || flag[i][j] == 1) {
            flag[i][j] = 1;
            return 0;
        }
        if( i > 0 ) {
            flag[i][j] = 1;
            searchIsland(grid, flag, i-1, j);
        }
        if( j > 0 ) {
            flag[i][j] = 1;
            searchIsland(grid, flag, i, j-1);
        }       
        if( i < grid.length-1 ) {
            flag[i][j] = 1;
            searchIsland(grid, flag, i+1, j);
        }
        if( j < grid[0].length-1 ) {
            flag[i][j] = 1;
            searchIsland(grid, flag, i, j+1);
        }
        return 1;
    }
}