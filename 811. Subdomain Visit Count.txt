class Solution {
    class CpD{
        int times;
        String d;
    }
    public List<String> subdomainVisits(String[] cpdomains) {
        List<CpD> resDomain = new ArrayList();
        List<String> times = new ArrayList();
        List<String> domains = new ArrayList();
        HashMap<String, Integer> map = new HashMap();
        for(String cpdomain : cpdomains) {
            String[] temp = cpdomain.split(" ");
            times.add(temp[0]);
            domains.add(temp[1]);
        }
        
        for(int m = 0; m < domains.size(); m++) {
            String[] strs = domains.get(m).split("\\.");
            String temp = "";
            for(int i = strs.length - 1; i >= 0; i--) {
                temp = strs[i] + "." + temp;
                if(map.containsKey(temp)) {
                    resDomain.get(map.get(temp)).times += Integer.parseInt(times.get(m));
                } else {
                    CpD cpd = new CpD();
                    cpd.times = Integer.parseInt(times.get(m));
                    cpd.d = temp.substring(0, temp.length()-1);
                    resDomain.add(cpd);
                    map.put(temp, resDomain.size()-1);
                }
            }
        }
        List<String> res = new ArrayList();
        for(CpD cpd : resDomain) {
            res.add(Integer.toString(cpd.times) + " " + cpd.d);
        }
        return res;
    }
}