class LRUCache {
    int cap;
    List<Integer> arr;
    Map<Integer,Integer> map;
    public LRUCache(int capacity) {
        cap = capacity;
        arr = new ArrayList();
        map = new HashMap();
    }
    
    public int get(int key) {
        int result = 0;
        if (map.containsKey(key)){
            result = map.get(key);
            arr.remove(arr.indexOf(key));
            arr.add(key);
        } else {
            result = -1;
        }
        return result;
    }
    
    public void put(int key, int value) {
        if(map.containsKey(key)){
            get(key);
            map.put(key,value);         
            return;
        }
        if(arr.size() == cap) {
            int temp = arr.get(0);
            arr.remove(0);
            map.remove(temp);
        } 
        arr.add(key);
        map.put(key,value);
    }
}