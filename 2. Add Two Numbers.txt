/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        return addHelper(l1, l2, 0);
    }
    public ListNode addHelper(ListNode l1, ListNode l2, int carry) {
        if(l1 == null && l2 == null && carry == 0) return null;
        ListNode result = new ListNode();
        int l1val = 0;
        int l2val = 0;
        ListNode l1Next = null;
        ListNode l2Next = null;
        if(l1 != null) l1val = l1.val;
        if(l2 != null) l2val = l2.val;
        result.val = (l1val + l2val + carry) % 10;
        carry = (l1val + l2val + carry) / 10;
        
        if(l1 != null) l1Next = l1.next;
        if(l2 != null) l2Next = l2.next;
        result.next = addHelper(l1Next, l2Next, carry);
        return result;
    }
}