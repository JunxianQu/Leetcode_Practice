/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> res = new ArrayList();
        if(root == null) return res;
        Queue<TreeNode> que = new LinkedList();
        que.offer(root);
        List<Integer> arr;
        while(!que.isEmpty()) {
            int size = que.size();
            int i = 0;
            arr = new ArrayList();
            while(i < size) {
                TreeNode t = que.poll();
                arr.add(t.val);
                if(t.left != null) que.offer(t.left);
                if(t.right != null) que.offer(t.right);
                i++;
            }
            res.add(arr);
        }
        return res;
    }
}